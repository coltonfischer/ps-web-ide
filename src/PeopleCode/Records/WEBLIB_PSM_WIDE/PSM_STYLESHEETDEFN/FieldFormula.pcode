import %metadata:StylesheetDefn:StylesheetDefn_Manager;
import %metadata:StylesheetDefn:StylesheetDefn;
import %metadata:Key;

Declare Function WriteError PeopleCode WEBLIB_PSM_WIDE.FUNCLIB FieldFormula;
Declare Function GetMetadataKey PeopleCode WEBLIB_PSM_WIDE.FUNCLIB FieldFormula;


Function IScript_Save
   
   Local string &sKey = %Request.GetParameter("key");
   Local string &sPeopleCode = %Request.GetParameter("peoplecode");
   
   If None(&sKey) Or
         None(&sPeopleCode) Then
      WriteError("Missing parameters");
   End-If;
   
   Local array of any &oParams = GetMetadataKey(&sKey);
   Local %metadata:Key &key = CreateObjectArray("%metadata:Key", &oParams);
   
   Local %metadata:StylesheetDefn:StylesheetDefn_Manager &oStylesheetDefn_Manager;
   &oStylesheetDefn_Manager = create %metadata:StylesheetDefn:StylesheetDefn_Manager();
   
   If Not (&oStylesheetDefn_Manager.DefnExists(&key)) Then
      %Response.SetHeader("Custom-Status", "404");
      %Response.Write("StyleSheet Object does not exist for the provided keys");
      Return;
   End-If;
   
   try
      Local %metadata:StylesheetDefn:StylesheetDefn &oStylesheetDefn = &oStylesheetDefn_Manager.GetDefnToUpdate(&key);
   catch Exception &e
      WriteError(&e.ToString());
   end-try;
   
   &oStylesheetDefn.ExtStyleSheetStr = &sPeopleCode;
   
   try
      Local boolean &bRet = &oStylesheetDefn.UpdateDefn();
   catch Exception &ex
      WriteError(&ex.ToString());
   end-try;
   
   %Response.SetHeader("Custom-Status", "200");
   Local JsonObject &oResponse = CreateJsonObject();
   &oResponse.AddProperty("peoplecode", EncodeURLForQueryString(&oStylesheetDefn.ExtStyleSheetStr));
   &oResponse.AddProperty("lastUpdate", "Last updated by: " | &oStylesheetDefn.LastUpdOprId | ", " | DateTimeToLocalizedString(&oStylesheetDefn.LastUpdDttm, "MM/dd/yyyy h:mm:ss a"));
   
   %Response.Write(&oResponse.ToString());
   
End-Function;


Function IScript_Open
   
   Local string &sKey = %Request.GetParameter("key");
   
   If None(&sKey) Then
      WriteError("Missing parameters");
   End-If;
   
   Local array of any &oParams = GetMetadataKey(&sKey);
   Local %metadata:Key &key = CreateObjectArray("%metadata:Key", &oParams);
   Local %metadata:StylesheetDefn:StylesheetDefn_Manager &oStylesheetDefn_Manager;
   &oStylesheetDefn_Manager = create %metadata:StylesheetDefn:StylesheetDefn_Manager();
   
   If Not (&oStylesheetDefn_Manager.DefnExists(&key)) Then
      %Response.SetHeader("Custom-Status", "404");
      %Response.Write("StyleSheet Object does not exist for the provided keys");
      Return;
   End-If;
   
   try
      Local %metadata:StylesheetDefn:StylesheetDefn &oStylesheetDefn = &oStylesheetDefn_Manager.GetDefn(&key);
   catch Exception &e
      WriteError(&e.ToString());
   end-try;
   
   %Response.SetHeader("Custom-Status", "200");
   Local JsonObject &oResponse = CreateJsonObject();
   &oResponse.AddProperty("peoplecode", EncodeURLForQueryString(&oStylesheetDefn.ExtStyleSheetStr));
   &oResponse.AddProperty("lastUpdate", "Last updated by: " | &oStylesheetDefn.LastUpdOprId | ", " | DateTimeToLocalizedString(&oStylesheetDefn.LastUpdDttm, "MM/dd/yyyy h:mm:ss a"));
   
   %Response.Write(&oResponse.ToString());
   
End-Function;


Function IScript_GetKeys
   
   Local string &sJsonObject = %Request.GetParameter("request");
   
   If None(&sJsonObject) Then
      WriteError("Missing parameters");
   End-If;
   
   Local JsonParser &oParser = CreateJsonParser();
   Local boolean &bRet = &oParser.Parse(&sJsonObject);
   Local JsonObject &oJson = &oParser.GetRootObject();
   
   Local string &sObjectName = &oJson.GetJsonObject("record").GetString("Name");
   
   Local Rowset &rPSPCMPROG = CreateRowset(Record.PSCONTENT);
   &rPSPCMPROG.Fill("WHERE CONTTYPE =: 1 and CONTNAME =:2 ", "9", &sObjectName);
   
   If (&rPSPCMPROG.ActiveRowCount = 1 And
         None(&rPSPCMPROG.GetRow(1).PSCONTENT.CONTTYPE.Value)) Then
      WriteError("Invalid Object Name");
   End-If;
   
   Local JsonObject &oResponse = CreateJsonObject();
   Local JsonArray &oLevel1 = CreateJsonArray();
   Local JsonArray &oLevel2 = CreateJsonArray();
   Local JsonObject &oKey = CreateJsonObject();
   
   &oKey.AddProperty("val", "94" | ":" | &sObjectName);
   
   &oLevel2.AddJsonObjectElement("", &oKey);
   &oLevel1.AddJsonArrayElement("", &oLevel2);
   &oResponse.AddJsonArray("progkeys", &oLevel1);
   &oResponse.AddProperty("status", "success");
   &oResponse.AddProperty("objectType", "94");
   
   %Response.Write(&oResponse.ToString());
   
End-Function;


Function IScript_GetNames
   
   Local string &sJsonObject = %Request.GetParameter("request");
   
   If None(&sJsonObject) Then
      WriteError("Missing parameters");
   End-If;
   
   Local JsonParser &oParser = CreateJsonParser();
   Local boolean &bRet = &oParser.Parse(&sJsonObject);
   Local JsonObject &oJson = &oParser.GetRootObject();
   
   Local string &sSearch = &oJson.GetString("search");
   
   Local array of any &A = CreateArrayAny("");
   Local string &sSqlStatement = "select DISTINCT(CONTNAME) from %TABLE(:1) where CONTTYPE = :2 and CONTNAME like :3";
   Local SQL &SQL = CreateSQL(&sSqlStatement, Record.PSCONTENT, "9", Upper(&sSearch) | "%");
   
   Local JsonArray &oRecords = CreateJsonArray();
   Local integer &i = 1;
   
   While &SQL.Fetch(&A)
      Local JsonObject &oRecord = CreateJsonObject();
      &oRecord.AddProperty("id", &i);
      &oRecord.AddProperty("text", &A [1]);
      &oRecords.AddJsonObjectElement("", &oRecord);
      &i = &i + 1;
   End-While;
   
   Local JsonObject &oResponse = CreateJsonObject();
   &oResponse.AddJsonArray("records", &oRecords);
   &oResponse.AddProperty("status", "success");
   
   %Response.Write(&oResponse.ToString());
   
End-Function;